<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fei.stock.mapper.StockRtInfoMapper">

    <resultMap id="BaseResultMap" type="com.fei.stock.pojo.entity.StockRtInfo">
            <id property="id" column="id" jdbcType="BIGINT"/>
            <result property="stockCode" column="stock_code" jdbcType="CHAR"/>
            <result property="stockName" column="stock_name" jdbcType="VARCHAR"/>
            <result property="preClosePrice" column="pre_close_price" jdbcType="DECIMAL"/>
            <result property="openPrice" column="open_price" jdbcType="DECIMAL"/>
            <result property="curPrice" column="cur_price" jdbcType="DECIMAL"/>
            <result property="minPrice" column="min_price" jdbcType="DECIMAL"/>
            <result property="maxPrice" column="max_price" jdbcType="DECIMAL"/>
            <result property="tradeAmount" column="trade_amount" jdbcType="BIGINT"/>
            <result property="tradeVolume" column="trade_volume" jdbcType="DECIMAL"/>
            <result property="curTime" column="cur_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,stock_code,stock_name,
        pre_close_price,open_price,cur_price,
        min_price,max_price,trade_amount,
        trade_volume,cur_time
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from stock_rt_info
        where  id = #{id,jdbcType=BIGINT} 
    </select>
    <select id="getStockInfoByTime" resultType="com.fei.stock.pojo.domain.StockUpdownDomain">
        select
            sri.trade_amount as tradeAmt,
            sri.pre_close_price as preClosePrice,
            (sri.max_price- sri.min_price)/sri.pre_close_price as amplitude,
            sri.stock_code as code,
            sri.stock_name as name,
            sri.cur_time   as curDate,
            sri.trade_volume as tradeVol,
            (sri.cur_price-sri.pre_close_price) as  increase,
            (sri.cur_price- sri.pre_close_price)/sri.pre_close_price as upDown ,
            sri.cur_price as tradePrice
        from stock_rt_info as sri
        where sri.cur_time= #{curData}
        order by upDown desc
    </select>
    <select id="getStockInfo4Desc" resultType="com.fei.stock.pojo.domain.StockUpdownDomain">
        select
            sri.trade_amount as tradeAmt,
            sri.pre_close_price as preClosePrice,
            (sri.max_price- sri.min_price)/sri.pre_close_price as amplitude,
            sri.stock_code as code,
            sri.stock_name as name,
            sri.cur_time   as curDate,
            sri.trade_volume as tradeVol,
            (sri.cur_price-sri.pre_close_price) as  increase,
            (sri.cur_price- sri.pre_close_price)/sri.pre_close_price as upDown ,
            sri.cur_price as tradePrice
        from stock_rt_info as sri
        where sri.cur_time= #{curData}
        order by upDown desc limit 4
    </select>
    <select id="getStockUpdownCount" resultType="java.util.Map">
        select
        date_format(tmp.time,'%Y%m%d%H%i') as time ,
        count(*) as count
        from (select
        (sri.cur_price-sri.pre_close_price)/sri.pre_close_price as ud,
        sri.cur_time as time
        from stock_rt_info sri
        where sri.cur_time BETWEEN #{openDate} and #{curDate}
        having ud <if test="flag==1">
        &gt;=0.1
        </if>
        <if test="flag==0">
            &lt;=-0.1
        </if>
        ) as tmp
        group by tmp.time
        order by tmp.time asc;
    </select>
    <select id="getIncreaseRangeInfoByDate" resultType="java.util.Map">
        <![CDATA[
        select res.title,
               count(*) as count
        from (select CASE
            WHEN tmp.rate > 0.07 THEN '>7%'
            WHEN tmp.rate > 0.05 AND tmp.rate <= 0.07 THEN '5~7%'
            WHEN tmp.rate > 0.03 AND tmp.rate <= 0.05 THEN '3~5%'
            WHEN tmp.rate > 0 AND tmp.rate <= 0.03 THEN '0~3%'
            WHEN tmp.rate > -0.03 AND tmp.rate <= 0 THEN '-3~0%'
            WHEN tmp.rate > -0.05 AND tmp.rate <= -0.03 THEN '-5~-3%'
            WHEN tmp.rate > -0.07 AND tmp.rate <= -0.05 THEN '-7~-5%'
            ELSE '<-7%'
            END as 'title'
            from (select (sri.cur_price - sri.pre_close_price) / sri.pre_close_price as rate
            from stock_rt_info as sri
            where sri.cur_time = #{dataTime}) as tmp)as res
        group by res.title;
        ]]>

    </select>
    <select id="getStockInfoByCodeAndDate" resultType="com.fei.stock.pojo.domain.Stock4MinuteDomain">
        select
            sri.cur_time     as date,
    sri.trade_amount as tradeAmt,
    sri.stock_code as code,
    sri.min_price lowPrice,
    sri.pre_close_price as preClosePrice,
    sri.stock_name as name,
    sri.max_price as highPrice,
    sri.open_price as openPrice,
    sri.trade_volume as tradeVol,
    sri.cur_price as tradePrice
        from stock_rt_info as sri
        where	sri.stock_code=#{stockCode}
          and sri.cur_time between #{openDate} and #{endDate};
    </select>
    <select id="getStockDayKLin" resultType="com.fei.stock.pojo.domain.Stock4EvrDayDomain">
        select
            sri2.cur_time as date,
    sri2.trade_amount as tradeAmt,
    sri2.stock_code as code,
    sri2.min_price as lowPrice,
    sri2.stock_name as name,
    sri2.max_price as highPrice,
    sri2.open_price as openPrice,
    sri2.trade_volume as tradeVol,
    sri2.cur_price as closePrice,
    sri2.pre_close_price as preClosePrice
        from
            stock_rt_info as sri2
        where sri2.stock_code=#{stockCode}  and sri2.cur_time in (
            select
            max( sri.cur_time ) as closeDate
            from
            stock_rt_info as sri
            where
            sri.stock_code =#{stockCode}
          and sri.cur_time between #{startDate} and #{endDate}
            group by
            date_format( sri.cur_time, '%Y%m%d' )
            )	 order by sri2.cur_time;
    </select>
    <select id="getDayLineDateList" resultType="java.util.Date">
        select
            max( sri.cur_time ) as closeDate
        from
            stock_rt_info as sri
        where
            sri.stock_code =#{stockCode}
          and sri.cur_time between #{startDate} and #{endDate}
        group by
            date_format( sri.cur_time, '%Y%m%d' )
    </select>
    <select id="getStockDayKLinByList" resultType="com.fei.stock.pojo.domain.Stock4EvrDayDomain">
        select
            sri2.cur_time as date,
    sri2.trade_amount as tradeAmt,
    sri2.stock_code as code,
    sri2.min_price as lowPrice,
    sri2.stock_name as name,
    sri2.max_price as highPrice,
    sri2.open_price as openPrice,
    sri2.trade_volume as tradeVol,
    sri2.cur_price as closePrice,
    sri2.pre_close_price as preClosePrice
        from
            stock_rt_info as sri2
        where sri2.stock_code=#{stockCode}  and sri2.cur_time in
        <foreach collection="dayLineDate" open="(" close=")" item="date" separator=",">
            #{date}
        </foreach>
        order by sri2.cur_time;
    </select>
    <select id="getWeekLineInfo" resultType="com.fei.stock.pojo.domain.WeekLineDomain">
        SELECT stock_id as stockCode,
               week_high as maxPrice,
               week_low as minPrice,
               week_open as openPrice,
               week_close as closePrice,
               week_avg as avgPrice,
               week_max_trade_date as mxTime
        FROM (SELECT stock_code                                                 AS stock_id,
                     DATE_FORMAT(cur_time, '%Y-%u')                             AS year_week,
                     MAX(cur_price)                                             AS week_high,
                     MIN(cur_price)                                             AS week_low,
                     AVG(cur_price)                                             AS week_avg,
                     MAX(cur_time)                                              AS week_max_trade_date,
                     COALESCE(MAX(CASE WHEN DAYOFWEEK(cur_time) = 2 THEN open_price END), 0) AS week_open,
                     COALESCE(MAX(CASE WHEN DAYOFWEEK(cur_time) = 2 THEN pre_close_price END), 0 ) AS week_close
              FROM stock_rt_info
              WHERE stock_code = #{code}
                and cur_time BETWEEN #{startDate} AND #{endDate}
              GROUP BY stock_code, DATE_FORMAT(cur_time, '%Y-%u')) AS weekly_data
        WHERE stock_id = #{code};
    </select>
    <select id="getStockTimeSharingInfo" resultType="com.fei.stock.pojo.domain.StockTimeSharingDomain">
        select trade_amount as tradeAmt,
               pre_close_price as preClosePrice,
               min_price as lowPrice,
               max_price as highPrice,
               open_price as openPrice,
               trade_volume as tradeVol,
               cur_price as tradePrice,
               date_format(cur_time,'%Y%m%d%H%i') as curDate

        from stock_rt_info where stock_code = #{code}
                             and cur_time = #{endTime}
    </select>
    <select id="getStockBillInfo" resultType="com.fei.stock.pojo.domain.StockBillDomain">
        select cur_time as date,
       trade_amount                        as tradeAmt,
       trade_volume                        as tradeVol,
       cur_price                           as tradePrice
        from stock_rt_info
        where DATE(cur_time) = #{endDate}
          and stock_code = #{code}
        order by cur_time desc
            limit 10;
    </select>


    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from stock_rt_info
        where  id = #{id,jdbcType=BIGINT} 
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.fei.stock.pojo.entity.StockRtInfo" useGeneratedKeys="true">
        insert into stock_rt_info
        ( id,stock_code,stock_name
        ,pre_close_price,open_price,cur_price
        ,min_price,max_price,trade_amount
        ,trade_volume,cur_time)
        values (#{id,jdbcType=BIGINT},#{stockCode,jdbcType=CHAR},#{stockName,jdbcType=VARCHAR}
        ,#{preClosePrice,jdbcType=DECIMAL},#{openPrice,jdbcType=DECIMAL},#{curPrice,jdbcType=DECIMAL}
        ,#{minPrice,jdbcType=DECIMAL},#{maxPrice,jdbcType=DECIMAL},#{tradeAmount,jdbcType=BIGINT}
        ,#{tradeVolume,jdbcType=DECIMAL},#{curTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertByList">
        insert into stock_rt_info
        ( id, stock_code, stock_name,
        pre_close_price, open_price, cur_price,
        min_price, max_price, trade_amount,
        trade_volume, cur_time)
        values
        <foreach collection="list" item="item" separator=",">
            ( #{item.id,jdbcType=BIGINT}, #{item.stockCode,jdbcType=CHAR}, #{item.stockName,jdbcType=VARCHAR},
            #{item.preClosePrice,jdbcType=DECIMAL}, #{item.openPrice,jdbcType=DECIMAL}, #{item.curPrice,jdbcType=DECIMAL},
            #{item.minPrice,jdbcType=DECIMAL}, #{item.maxPrice,jdbcType=DECIMAL}, #{item.tradeAmount,jdbcType=BIGINT},
            #{item.tradeVolume,jdbcType=DECIMAL}, #{item.curTime,jdbcType=TIMESTAMP} )
        </foreach>
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.fei.stock.pojo.entity.StockRtInfo" useGeneratedKeys="true">
        insert into stock_rt_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
                <if test="id != null">id,</if>
                <if test="stockCode != null">stock_code,</if>
                <if test="stockName != null">stock_name,</if>
                <if test="preClosePrice != null">pre_close_price,</if>
                <if test="openPrice != null">open_price,</if>
                <if test="curPrice != null">cur_price,</if>
                <if test="minPrice != null">min_price,</if>
                <if test="maxPrice != null">max_price,</if>
                <if test="tradeAmount != null">trade_amount,</if>
                <if test="tradeVolume != null">trade_volume,</if>
                <if test="curTime != null">cur_time,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
                <if test="id != null">#{id,jdbcType=BIGINT},</if>
                <if test="stockCode != null">#{stockCode,jdbcType=CHAR},</if>
                <if test="stockName != null">#{stockName,jdbcType=VARCHAR},</if>
                <if test="preClosePrice != null">#{preClosePrice,jdbcType=DECIMAL},</if>
                <if test="openPrice != null">#{openPrice,jdbcType=DECIMAL},</if>
                <if test="curPrice != null">#{curPrice,jdbcType=DECIMAL},</if>
                <if test="minPrice != null">#{minPrice,jdbcType=DECIMAL},</if>
                <if test="maxPrice != null">#{maxPrice,jdbcType=DECIMAL},</if>
                <if test="tradeAmount != null">#{tradeAmount,jdbcType=BIGINT},</if>
                <if test="tradeVolume != null">#{tradeVolume,jdbcType=DECIMAL},</if>
                <if test="curTime != null">#{curTime,jdbcType=TIMESTAMP},</if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="com.fei.stock.pojo.entity.StockRtInfo">
        update stock_rt_info
        <set>
                <if test="stockCode != null">
                    stock_code = #{stockCode,jdbcType=CHAR},
                </if>
                <if test="stockName != null">
                    stock_name = #{stockName,jdbcType=VARCHAR},
                </if>
                <if test="preClosePrice != null">
                    pre_close_price = #{preClosePrice,jdbcType=DECIMAL},
                </if>
                <if test="openPrice != null">
                    open_price = #{openPrice,jdbcType=DECIMAL},
                </if>
                <if test="curPrice != null">
                    cur_price = #{curPrice,jdbcType=DECIMAL},
                </if>
                <if test="minPrice != null">
                    min_price = #{minPrice,jdbcType=DECIMAL},
                </if>
                <if test="maxPrice != null">
                    max_price = #{maxPrice,jdbcType=DECIMAL},
                </if>
                <if test="tradeAmount != null">
                    trade_amount = #{tradeAmount,jdbcType=BIGINT},
                </if>
                <if test="tradeVolume != null">
                    trade_volume = #{tradeVolume,jdbcType=DECIMAL},
                </if>
                <if test="curTime != null">
                    cur_time = #{curTime,jdbcType=TIMESTAMP},
                </if>
        </set>
        where   id = #{id,jdbcType=BIGINT} 
    </update>
    <update id="updateByPrimaryKey" parameterType="com.fei.stock.pojo.entity.StockRtInfo">
        update stock_rt_info
        set 
            stock_code =  #{stockCode,jdbcType=CHAR},
            stock_name =  #{stockName,jdbcType=VARCHAR},
            pre_close_price =  #{preClosePrice,jdbcType=DECIMAL},
            open_price =  #{openPrice,jdbcType=DECIMAL},
            cur_price =  #{curPrice,jdbcType=DECIMAL},
            min_price =  #{minPrice,jdbcType=DECIMAL},
            max_price =  #{maxPrice,jdbcType=DECIMAL},
            trade_amount =  #{tradeAmount,jdbcType=BIGINT},
            trade_volume =  #{tradeVolume,jdbcType=DECIMAL},
            cur_time =  #{curTime,jdbcType=TIMESTAMP}
        where   id = #{id,jdbcType=BIGINT} 
    </update>
</mapper>
